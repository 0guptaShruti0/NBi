<?xml version="1.0" encoding="utf-8" ?>
<testSuite name="Acceptance Testing: query equalTo ResultSet" xmlns="http://NBi/TestSuite">
  <settings>
    <default apply-to="system-under-test">
      <connectionString>Data Source=mhknbn2kdz.database.windows.net;Initial Catalog=AdventureWorks2012;User Id=sqlfamily;password=sqlf@m1ly</connectionString>
    </default>
    <default apply-to="assert">
      <connectionString>Data Source=mhknbn2kdz.database.windows.net;Initial Catalog=AdventureWorks2012;User Id=sqlfamily;password=sqlf@m1ly</connectionString>
    </default>
  </settings>
  <group name="asserts">
    <test name="'Reseller Orders' count, year by year, between 2005 and 2008" uid="0001">
      <system-under-test>
        <resultSet file="..\Csv\ResellerOrderCountByYearBefore2006.csv"/>
      </system-under-test>
      <assert>
        <equalTo>
          <resultSet>
            <row>
              <cell>CY 2005</cell>
              <cell>366</cell>
            </row>
            <row>
              <cell>CY 2006</cell>
              <cell>1015</cell>
            </row>
            <row>
              <cell>CY 2007</cell>
              <cell>1521</cell>
            </row>
            <row>
              <cell>CY 2008</cell>
              <cell>894</cell>
            </row>
          </resultSet>
        </equalTo>
      </assert>
    </test>
    <test name="'Reseller Orders' count are less than 10000" uid="0002">
      <system-under-test>
        <resultSet file="..\Csv\ResellerOrderCountByYearBefore2006.csv"/>
      </system-under-test>
      <assert>
        <all-rows>
          <predicate name="#1">
            <less-than>10000</less-than>
          </predicate>
        </all-rows>
      </assert>
    </test>
    <test name="'Reseller Orders' count none are more than 10000" uid="0003">
      <system-under-test>
        <resultSet file="..\Csv\ResellerOrderCountByYearBefore2006.csv"/>
      </system-under-test>
      <assert>
        <no-rows>
          <predicate name="#1">
            <more-than>10000</more-than>
          </predicate>
        </no-rows>
      </assert>
    </test>
    <test name="'Reseller Orders' count none are unique" uid="0004">
      <system-under-test>
        <resultSet file="..\Csv\ResellerOrderCountByYearBefore2006.csv"/>
      </system-under-test>
      <assert>
        <unique-rows/>
      </assert>
    </test>
    <test name="'Reseller Orders' count are 4 rows" uid="0005">
      <system-under-test>
        <resultSet file="..\Csv\ResellerOrderCountByYearBefore2006.csv"/>
      </system-under-test>
      <assert>
        <row-count>
          <equal>4</equal>
        </row-count>
      </assert>
    </test>
  </group>
  <group name="system-under-tests">
    <test name="Embedded result-set" uid="0101">
      <system-under-test>
        <resultSet>
          <row>
            <cell>CY 2005</cell>
            <cell>366</cell>
          </row>
          <row>
            <cell>CY 2006</cell>
            <cell>1015</cell>
          </row>
          <row>
            <cell>CY 2007</cell>
            <cell>1521</cell>
          </row>
          <row>
            <cell>CY 2008</cell>
            <cell>894</cell>
          </row>
        </resultSet>
      </system-under-test>
      <assert>
        <unique-rows/>
      </assert>
    </test>
    <test name="External result-set" uid="0102">
      <system-under-test>
        <resultSet file="..\Csv\ResellerOrderCountByYearBefore2006.csv"/>
      </system-under-test>
      <assert>
        <unique-rows/>
      </assert>
    </test>
    <test name="Embedded query" uid="0103">
      <system-under-test>
        <resultSet>
          <query>
            select @prefix + ' 2005' as [year], 366 as [value]
            union all select @prefix + ' 2006' as [year], 1015 as [value]
            union all select @prefix + ' 2007' as [year], 1521 as [value]
            union all select @prefix + ' 2008' as [year], 894 as [value]
            <parameter name="prefix">CY</parameter>
          </query>
        </resultSet>
      </system-under-test>
      <assert>
        <all-rows>
          <predicate name="#0" type="text">
            <starts-with>CY </starts-with>
          </predicate>
        </all-rows>
      </assert>
    </test>
    <test name="External query" uid="0104">
      <system-under-test>
        <resultSet>
          <query file="..\Query\ResellerOrderCount.sql">
            <parameter name="prefix">CY</parameter>
          </query>
        </resultSet>
      </system-under-test>
      <assert>
        <all-rows>
          <predicate name="#0" type="text">
            <starts-with>CY </starts-with>
          </predicate>
        </all-rows>
      </assert>
    </test>
    <test name="Query from assembly" uid="0105">
      <system-under-test>
        <resultSet>
          <query>
            <assembly path="..\..\..\NBi.Testing.dll" class="NBi.Testing.Acceptance.Resources.AssemblyClass" method="GetTextSelectSql">
              <method-parameter name="prefix">CY</method-parameter>
            </assembly>
          </query>
        </resultSet>
      </system-under-test>
      <assert>
        <equalTo>
          <resultSet file="..\Csv\ResellerOrderCountByYearBefore2006.csv"/>
        </equalTo>
      </assert>
    </test>
    <test name="Query from report" uid="0106">
      <condition>
        <service-running name="MSSQL$SQL2012"/>
      </condition>
      <system-under-test>
        <resultSet>
          <query>
            <report source="Data Source=(local)\SQL2012;Initial Catalog=ReportServer;Integrated Security=True;"
                path="/AdventureWorks 2012/"
                name="Store_Contacts"
                dataset="Stores"
				    />
          </query>
        </resultSet>
      </system-under-test>
      <assert>
        <equalTo values-default-type="text">
          <resultSet file="..\Csv\BusinessEntity.csv"/>
        </equalTo>
      </assert>
    </test>
  </group>
  <group name="Alterations">
    <test name="Query from assembly" uid="0105">
      <system-under-test>
        <resultSet file="..\Csv\ResellerOrderCountByYearBefore2006.csv">
          <alteration>
            <filter>
              <predicate name="#0" type="text">
                <less-than>CY 2007</less-than>
              </predicate>
            </filter>
          </alteration>
        </resultSet>
      </system-under-test>
      <assert>
        <equalTo>
          <resultSet>
            <row>
              <cell>CY 2005</cell>
              <cell>366</cell>
            </row>
            <row>
              <cell>CY 2006</cell>
              <cell>1015</cell>
            </row>
          </resultSet>
        </equalTo>
      </assert>
    </test>
  </group>
</testSuite>
