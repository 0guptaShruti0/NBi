<?xml version="1.0" encoding="utf-8" ?>
<testSuite name="Acceptance Testing: query equalTo ResultSet" xmlns="http://NBi/TestSuite">
  <settings>
    <default apply-to="system-under-test">
      <connectionString>Data Source=mhknbn2kdz.database.windows.net;Initial Catalog=AdventureWorks2012;User Id=sqlfamily;password=sqlf@m1ly</connectionString>
    </default>
  </settings>
  <!--<test name="Purchase orders info" uid="0001">
    <system-under-test>
      <execution>
        <query>
          select '99503', '872-AA', 'Mill Valley'
          union all select '99503', '926-AA', 'Mill Valley'
          union all select '99505', '456-NM', 'Buffalo'
          union all select '99504', '898-AZ', 'Seattle'
          union all select '99504', '898-AM', 'Seattle'
        </query>
      </execution>
    </system-under-test>
    <assert>
      <equalTo>
        <column index="0" role="value" type="text"/>
        <column index="1" role="key" type="text"/>
        <column index="2" role="value" type="text"/>
        <xml-source>
          <file>..\PurchaseOrders.xml</file>
          <xpath>
            <from>//PurchaseOrder/Items/Item</from>
            <select attribute="PurchaseOrderNumber">../..</select>
            <select attribute="PartNumber">.</select>
            <select>../../Address[@Type="Shipping"]/City</select>
          </xpath>
        </xml-source>
      </equalTo>
    </assert>
  </test>-->
  <test name="Notes from Web" uid="0002">
    <system-under-test>
      <execution>
        <query>
          select 'Belgian Waffles', '$5.95'
          union all select 'Strawberry Belgian Waffles', '$7.95'
          union all select 'Berry-Berry Belgian Waffles', '$8.95'
          union all select 'French Toast', '$4.50'
          union all select 'Homestyle Breakfast', '$6.95'
        </query>
      </execution>
    </system-under-test>
    <assert>
      <equalTo>
        <column index="0" role="key" type="text"/>
        <column index="1" role="value" type="text"/>
        <xml-source>
          <url>http://www.w3schools.com/xml/simple.xml</url>
          <xpath>
            <from>//food</from>
            <select>name</select>
            <select>substring-after(price, '$')</select>
          </xpath>
        </xml-source>
      </equalTo>
    </assert>
  </test>
</testSuite>
